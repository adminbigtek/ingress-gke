apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: app1
        image: us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      - name: app2
        image: us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: app1-service
  annotations:
    cloud.google.com/backend-config: '{"ports": {"http-port": "app1-backend-config"}}'
spec:
  selector:
    app: app1
  ports:
  - name: http-port
    port: 80
    protocol: TCP
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: app2-service
  annotations:
    cloud.google.com/backend-config: '{"ports": {"http-port": "app2-backend-config"}}'
spec:
  selector:
    app: app2
  ports:
  - name: http-port
    port: 80
    protocol: TCP
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "ip-ingress"
    networking.gke.io/managed-certificates: "my-managed-cert"
#   networking.gke.io/frontend-config: "my-frontend-config"
    networking.gke.io/ingress.global-classic: "false"
spec:
  rules:
  - host: app1.mrcloud.vn
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app1-service
            port:
              number: 80
  - host: app2.mrcloud.vn
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app2-service
            port:
              number: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: my-managed-cert
spec:
  domains:
    - app1.mrcloud.vn
    - app2.mrcloud.vn
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: my-frontend-config
spec:
  redirectToHttps:
    enabled: true
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: app1-backend-config
spec:
  healthCheck:
    checkIntervalSec: 30
    timeoutSec: 10
    healthyThreshold: 1
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /healthz
    port: 8080
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 60
  customRequestHeaders:
    - name: X-Custom-Header
      value: CustomValue
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: app2-backend-config
spec:
  healthCheck:
    checkIntervalSec: 30
    timeoutSec: 10
    healthyThreshold: 1
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /healthz
    port: 8080
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 60
  sessionAffinity: CLIENT_IP
  customRequestHeaders:
    - name: X-Custom-Header
      value: CustomValue
